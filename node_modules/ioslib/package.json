{
  "name": "ioslib",
  "version": "0.10.4",
  "description": "iOS Utility Library",
  "keywords": [
    "appcelerator",
    "ios",
    "iphone",
    "ipad",
    "xcode",
    "apple"
  ],
  "author": {
    "name": "Appcelerator, Inc.",
    "email": "npmjs@appcelerator.com"
  },
  "maintainers": [
    {
      "name": "Jeff Haynie",
      "email": "jhaynie@appcelerator.com"
    },
    {
      "name": "Chris Barber",
      "email": "cbarber@appcelerator.com"
    }
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/appcelerator/ioslib.git"
  },
  "license": "Apache-2.0",
  "main": "./index",
  "bugs": {
    "url": "https://github.com/appcelerator/ioslib/issues"
  },
  "directories": {
    "lib": "./lib"
  },
  "dependencies": {
    "always-tail": "0.2.0",
    "async": "1.5.2",
    "bplist-parser": "0.1.1",
    "mkdirp": "0.5.1",
    "node-appc": "0.2.35",
    "node-ios-device": "0.8.3"
  },
  "devDependencies": {
    "mocha": "^2.4.5",
    "should": "^8.2.2"
  },
  "scripts": {
    "test": "mocha --require test/init --reporter spec --check-leaks test/",
    "test-certs": "mocha --require test/init --reporter spec --check-leaks test/test-certs",
    "test-device": "mocha --require test/init --reporter spec --check-leaks test/test-device",
    "test-env": "mocha --require test/init --reporter spec --check-leaks test/test-env",
    "test-ioslib": "mocha --require test/init --reporter spec --check-leaks test/test-ioslib",
    "test-provisioning": "mocha --require test/init --reporter spec --check-leaks test/test-provisioning",
    "test-simulator": "mocha --require test/init --reporter spec --check-leaks test/test-simulator",
    "test-xcode": "mocha --require test/init --reporter spec --check-leaks test/test-xcode"
  },
  "engines": {
    "node": ">=0.10"
  },
  "readme": "# iOS Utility Library\n\n> This is a library of utilities for dealing programmatically with iOS applications,\nused namely for tools like [Hyperloop](https://github.com/appcelerator/hyperloop)\nand [Titanium](https://github.com/appcelerator/titanium).\n\nioslib supports Xcode 6 and newer.\n\n[![Build Status](https://travis-ci.org/appcelerator/ioslib.svg?branch=master)](https://travis-ci.org/appcelerator/ioslib)\n[![Dependency Status](https://david-dm.org/appcelerator/ioslib.svg)](https://david-dm.org/appcelerator/ioslib)\n[![devDependency Status](https://david-dm.org/appcelerator/ioslib/dev-status.svg)](https://david-dm.org/appcelerator/ioslib#info=devDependencies)\n[![NPM version](https://badge.fury.io/js/ioslib.svg)](http://badge.fury.io/js/ioslib)\n\n[![NPM](https://nodei.co/npm-dl/ioslib.png)](https://nodei.co/npm/ioslib/)\n\n## Prerequisites\n\nThis library current depends on [node-ios-device](https://github.com/appcelerator/node-ios-device)\nand thus is currently compatible with Node.js version 0.8.0 through 0.12.0, io.js 1.0 through 3.3,\nand Node.js 4.0.\n\n## Installation\n\nFrom NPM:\n\n\tnpm install ioslib\n\nFrom GitHub:\n\n\tnpm install git://github.com/appcelerator/ioslib.git\n\n## Examples\n\n### Detect all the connected iOS devices:\n\n```javascript\nvar ioslib = require('ioslib');\n\nioslib.device.detect(function (err, devices) {\n\tif (err) {\n\t\tconsole.error(err);\n\t} else {\n\t\tconsole.log(devices);\n\t}\n});\n```\n\n### Install an application on device\n\n```javascript\nvar deviceUDID = null; // string or null to pick first device\n\nioslib.device.install(deviceUDID, '/path/to/name.app', 'com.company.appname')\n\t.on('installed', function () {\n\t\tconsole.log('App successfully installed on device');\n\t})\n\t.on('appStarted', function () {\n\t\tconsole.log('App has started');\n\t})\n\t.on('log', function (msg) {\n\t\tconsole.log('[LOG] ' + msg);\n\t})\n\t.on('appQuit', function () {\n\t\tconsole.log('App has quit');\n\t})\n\t.on('error', function (err) {\n\t\tconsole.error(err);\n\t});\n```\n\n### Launch the iOS Simulator\n\n```javascript\nioslib.simulator.launch(null, function (err, simHandle) {\n\tconsole.log('Simulator launched');\n\tioslib.simulator.stop(simHandle, function () {\n\t\tconsole.log('Simulator stopped');\n\t});\n});\n```\n\n### Launch, install, and run an application on simulator\n\n```javascript\nvar simUDID = null; // string or null to pick a simulator\n\nioslib.simulator.launch(simUDID, {\n\t\tappPath: '/path/to/name.app'\n\t})\n\t.on('launched', function (msg) {\n\t\tconsole.log('Simulator has launched');\n\t})\n\t.on('appStarted', function (msg) {\n\t\tconsole.log('App has started');\n\t})\n\t.on('log', function (msg) {\n\t\tconsole.log('[LOG] ' + msg);\n\t})\n\t.on('error', function (err) {\n\t\tconsole.error(err);\n\t});\n```\n\n### Force stop an application running on simulator\n\n```javascript\nioslib.simulator.launch(simUDID, {\n\t\tappPath: '/path/to/name.app'\n\t})\n\t.on('launched', function (simHandle) {\n\t\tconsole.log('Simulator launched');\n\t\tioslib.simulator.stop(simHandle).on('stopped', function () {\n\t\t\tconsole.log('Simulator stopped');\n\t\t});\n\t});\n```\n\n### Find a valid device/cert/provisioning profile combination\n\n```javascript\nioslib.findValidDeviceCertProfileCombos({\n\tappId: 'com.company.appname'\n}, function (err, results) {\n\tif (err) {\n\t\tconsole.error(err);\n\t} else {\n\t\tconsole.log(results);\n\t}\n});\n```\n\n### Detect everything\n\n```javascript\nioslib.detect(function (err, info) {\n\tif (err) {\n\t\tconsole.error(err);\n\t} else {\n\t\tconsole.log(info);\n\t}\n});\n```\n\n### Detect iOS certificates\n\n```javascript\nioslib.certs.detect(function (err, certs) {\n\tif (err) {\n\t\tconsole.error(err);\n\t} else {\n\t\tconsole.log(certs);\n\t}\n});\n```\n\n### Detect provisioning profiles\n\n```javascript\nioslib.provisioning.detect(function (err, profiles) {\n\tif (err) {\n\t\tconsole.error(err);\n\t} else {\n\t\tconsole.log(profiles);\n\t}\n});\n```\n\n### Detect Xcode installations\n\n```javascript\nioslib.xcode.detect(function (err, xcodeInfo) {\n\tif (err) {\n\t\tconsole.error(err);\n\t} else {\n\t\tconsole.log(xcodeInfo);\n\t}\n});\n```\n\n## Running Tests\n\nFor best results, connect an iOS device.\n\nTo run all tests:\n\n```\nnpm test\n```\n\nTo see debug logging, set the `DEBUG` environment variable:\n\n```\nDEBUG=1 npm test\n```\n\nTo run a specific test suite:\n\n```\nnpm run-script test-certs\n\nnpm run-script test-device\n\nnpm run-script test-env\n\nnpm run-script test-ioslib\n\nnpm run-script test-provisioning\n\nnpm run-script test-simulator\n\nnpm run-script test-xcode\n```\n\n## Known Issues\n\nSimulator tests fail due to issue with NSLog() calls not properly being logged\nand thus we don't know when tests are done. The result is the tests timeout.\n\n## Reporting Bugs or Submitting Fixes\n\nIf you run into problems, and trust us, there are likely plenty of them at this\npoint -- please create an [Issue](https://github.com/appcelerator/ioslib/issues)\nor, even better, send us a pull request.\n\n## Contributing\n\nioslib is an open source project. ioslib wouldn't be where it is now without\ncontributions by the community. Please consider forking ioslib to improve,\nenhance or fix issues. If you feel like the community will benefit from your\nfork, please open a pull request.\n\nTo protect the interests of the ioslib contributors, Appcelerator, customers\nand end users we require contributors to sign a Contributors License Agreement\n(CLA) before we pull the changes into the main repository. Our CLA is simple and\nstraightforward - it requires that the contributions you make to any\nAppcelerator open source project are properly licensed and that you have the\nlegal authority to make those changes. This helps us significantly reduce future\nlegal risk for everyone involved. It is easy, helps everyone, takes only a few\nminutes, and only needs to be completed once.\n\n[You can digitally sign the CLA](http://bit.ly/app_cla) online. Please indicate\nyour email address in your first pull request so that we can make sure that will\nlocate your CLA.  Once you've submitted it, you no longer need to send one for\nsubsequent submissions.\n\n## Contributors\n\nThe original source and design for this project was developed by\n[Jeff Haynie](http://github.com/jhaynie) ([@jhaynie](http://twitter.com/jhaynie)).\n\n## Legal\n\nCopyright (c) 2014 by [Appcelerator, Inc](http://www.appcelerator.com). All Rights Reserved.\nThis project is licensed under the Apache Public License, version 2.  Please see details in the LICENSE file.\n",
  "readmeFilename": "README.md",
  "gitHead": "135c33e22226d6e7addfba488b497bf9fdcbca1f",
  "homepage": "https://github.com/appcelerator/ioslib#readme",
  "_id": "ioslib@0.10.4",
  "_shasum": "b50a30f67bd83cb692d7e7b9adaae84d1435463b",
  "_from": "ioslib@0.10.4"
}
